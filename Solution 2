#There are a lot of different ways you could do this
#problem. The one below is probably one of the simplest,
#but there are lots of others.
#
#For this answer, we're going to basically follow this
#pattern:
#
#If there's currently a space in the string, then there
#are at least two words. So, grab the first word by
#finding the index of the first space, save the first
#word to the list, and remove the first word from the
#string. Repeat as long as there are spaces in the
#string. When all the spaces are gone, add whatever is
#left to the list.

def string_splitter(a_string):
    
    #First we initialize the list we'll end up returning:
    
    words = []
    
    #Then, we run a while loop as long as there is a
    #space in the string. If there's a space, there must
    #be at least two words:
    
    while " " in a_string:
        
        #So, if we're here, we know there's a space in
        #the string. So, the first word is the string
        #slice from the beginning until the index of the
        #first space.
        #
        #So, we find the index...
        
        index = a_string.find(" ")
        
        #...and add that slice to the list of words...
        
        words.append(a_string[:index])
        
        #...and remove that slice from a_string. To do
        #this last part, we set a_string equal to
        #itself, starting one character after the first
        #space.
        
        a_string = a_string[index + 1:]
        
        #If there are still spaces, the loop will repeat.
        #Each time the loop repeats, it'll get rid of
        #one space.
        
    #When there are no more spaces, then there is still
    #one word in the string: whatever was after the last
    #space. So, we add that to the list:
    
    words.append(a_string)
    
    #And return our result:
    
    return words


print(string_splitter("Hello, world"))




